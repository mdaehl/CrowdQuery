random_seed: 444


dataset:
  type: &dataset_type 'stcrowd'
  root_dir: 'data/st_crowd'
  train_split: 'train'
  test_split: 'val'
  batch_size: 8
  use_3d_center: True
  class_merging: False
  use_dontcare: False
  bbox2d_type: 'anno'  # 'proj' or 'anno'
  meanshape: False  # use predefined anchor or not
  writelist: ['Pedestrian']
  clip_2d: False

  aug_pd: True
  aug_crop: True

  random_flip: 0.5
  random_crop: 0.5
  scale: 0.05
  shift: 0.05

  depth_scale: 'normal'


model_name: 'monodetr'
model:
  num_classes: 1
  return_intermediate_dec: True
  device: 'cuda'

  # Backbone
  backbone: 'resnet50'
  train_backbone: True
  num_feature_levels: 4
  dilation: False
  position_embedding: 'sine'  # 'sine' or 'learned'
  masks: False

  # Depth predictor
  mode: LID
  num_depth_bins: 80
  depth_min: 1e-3
  depth_max: 60.0

  # Transformer
  with_box_refine: True
  two_stage: False
  use_dab: False
  use_dn: False
  two_stage_dino: False
  init_box: False
  enc_layers: 3
  dec_layers: 3
  hidden_dim: 256
  dim_feedforward: 256
  dropout: 0.1
  nheads: 8
  num_queries: 100
  enc_n_points: 4
  dec_n_points: 4
  # DN
  scalar: 5
  label_noise_scale: 0.2
  box_noise_scale: 0.4
  num_patterns: 0
  # Loss
  aux_loss: True

  # Loss coefficients
  cls_loss_coef: 2
  focal_alpha: 0.25

  bbox_loss_coef: 5
  giou_loss_coef: 2
  3dcenter_loss_coef: 10
  dim_loss_coef: 1
  angle_loss_coef: 1
  depth_loss_coef: 1
  depth_map_loss_coef: 1
  density_map_loss_coef: 1

  # Matcher
  set_cost_class: 2
  set_cost_bbox: 5
  set_cost_giou: 2
  set_cost_3dcenter: 10

  # Module order
  density_first: True  # density or depth module first in decoder

  # Density module
  density_module:
    predictor:
      type: "classic" 
      mode: &mode "regression"
      num_bins: &num_bins 121
      min_val: &min_val 0
      max_val: &max_val 3
      embed_mode: "uniform"
    decoder:
      d_model: 256
      nhead: 8
      n_groups: 11  # WARNING: this is hardcoded in the rest of the code basis
      dropout: 0.1
      extra_proj: True
      use_densities: [True, True, True]

  # Density loss
  density_loss:
    mode: *mode
    encode_settings:
      min_val: *min_val
      max_val: *max_val
      rel_std_width: 3
      rel_std_height: 3
    loss_settings:
      balanced_loss: True


optimizer:
  type: 'adamw'
  lr: 0.0001
  weight_decay: 0.0001


lr_scheduler:
  type: 'step'  # 'step' or 'cos'
  warmup: False  # 5 epoches, cosine warmup, init_lir=0.00001 in default
  decay_rate: 0.1
  decay_list: [125, 165]


trainer:
  max_epoch: 195
  gpu_ids: '1'
  save_frequency: 1  # checkpoint save interval (in epoch)
  # resume_model: True
  # pretrain_model: path/to/ckpt
  save_path: 'outputs/'
  save_all: False  # False for only savng the best and latest ckpts
  use_dn: False
  scalar: 5
  label_noise_scale: 0.2
  box_noise_scale: 0.4
  num_patterns: 0

tester:
  type: *dataset_type
  mode: single  # 'single' or 'all'; 'all' to evaluate all ckpts in the folder
  checkpoint: 195  # the start ckpt epoch for 'all'
  threshold: 0.2  # confidence filter
  topk: 100